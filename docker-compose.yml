version: '3.8'
services:
  traefik:
    image: traefik:v2.9.1
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - keycloak-network
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - ./postgresdb:/var/lib/postgresql/data
    networks:
     - keycloak-network
  keycloak:
    image: quay.io/keycloak/keycloak:19.0.1
    restart: unless-stopped
    environment:
      - KC_DB=postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_DB_SCHEMA=public
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_PORT=5432
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - PROXY_ADDRESS_FORWARDING=true
      - KC_PROXY=edge
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    entrypoint: /opt/keycloak/bin/kc.sh start --auto-build
    networks:
      - keycloak-network
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`144.22.143.245`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.routers.keycloak.tls.certresolver=myresolver"
networks:
  keycloak-network:
    driver: bridge
